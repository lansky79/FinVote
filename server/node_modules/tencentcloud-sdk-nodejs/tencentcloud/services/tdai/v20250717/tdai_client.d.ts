import { AbstractClient } from "../../../common/abstract_client";
import { ClientConfig } from "../../../common/interface";
import { RemoveChatRequest, DescribeReportUrlResponse, DescribeAgentDutyTaskDetailRequest, DescribeChatDetailRequest, DescribeAgentsRequest, DescribeChatsRequest, ModifyChatTitleResponse, CreateAgentInstanceRequest, DescribeAgentDutyTasksResponse, RecoverAgentInstanceResponse, DescribeAgentsResponse, CreateChatCompletionRequest, ModifyChatTitleRequest, DescribeAgentInstancesRequest, IsolateAgentInstanceResponse, PauseAgentWorkRequest, CreateAgentInstanceResponse, DescribeAgentDutyTasksRequest, PauseAgentWorkResponse, DescribeChatDetailResponse, TerminateAgentInstanceResponse, ModifyAgentInstanceParametersResponse, IsolateAgentInstanceRequest, DescribeAgentInstanceRequest, ModifyAgentInstanceParametersRequest, ContinueAgentWorkResponse, DescribeAgentInstancesResponse, RecoverAgentInstanceRequest, ContinueAgentWorkRequest, DescribeChatsResponse, DescribeAgentInstanceResponse, CreateChatCompletionResponse, DescribeReportUrlRequest, DescribeAgentDutyTaskDetailResponse, RemoveChatResponse, TerminateAgentInstanceRequest } from "./tdai_models";
/**
 * tdai client
 * @class
 */
export declare class Client extends AbstractClient {
    constructor(clientConfig: ClientConfig);
    /**
     * 本接口（DescribeChatDetail）用于查询对话详情，通常在用户查询会话的历史记录时使用。
     */
    DescribeChatDetail(req: DescribeChatDetailRequest, cb?: (error: string, rep: DescribeChatDetailResponse) => void): Promise<DescribeChatDetailResponse>;
    /**
     * 本接口（RemoveChat）用于删除会话，通常在用户删除会话时使用。
     */
    RemoveChat(req: RemoveChatRequest, cb?: (error: string, rep: RemoveChatResponse) => void): Promise<RemoveChatResponse>;
    /**
     * 本接口（IsolateAgentInstance）用于隔离智能体实例，通常在用户需要隔离智能体实例时使用。
     */
    IsolateAgentInstance(req: IsolateAgentInstanceRequest, cb?: (error: string, rep: IsolateAgentInstanceResponse) => void): Promise<IsolateAgentInstanceResponse>;
    /**
     * 本接口（ContinueAgentWork）用于重启智能体实例的值守任务，通常在用户需要重启时使用。
     */
    ContinueAgentWork(req: ContinueAgentWorkRequest, cb?: (error: string, rep: ContinueAgentWorkResponse) => void): Promise<ContinueAgentWorkResponse>;
    /**
     * 查询智能体值守任务列表
     */
    DescribeAgentDutyTasks(req: DescribeAgentDutyTasksRequest, cb?: (error: string, rep: DescribeAgentDutyTasksResponse) => void): Promise<DescribeAgentDutyTasksResponse>;
    /**
     * 本接口（PauseAgentWork）用于暂停智能体实例的值守任务，通常在用户需要暂停时使用。
     */
    PauseAgentWork(req: PauseAgentWorkRequest, cb?: (error: string, rep: PauseAgentWorkResponse) => void): Promise<PauseAgentWorkResponse>;
    /**
     * 本接口（DescribeChats）用于查询对话列表，通常在用户查询会话列表时使用。
     */
    DescribeChats(req: DescribeChatsRequest, cb?: (error: string, rep: DescribeChatsResponse) => void): Promise<DescribeChatsResponse>;
    /**
     * 本接口（DescribeAgentInstance）用于查询智能体实例详情，通常在用户查询所购买的所有智能体实例详情时使用。
     */
    DescribeAgentInstance(req: DescribeAgentInstanceRequest, cb?: (error: string, rep: DescribeAgentInstanceResponse) => void): Promise<DescribeAgentInstanceResponse>;
    /**
     * 用于创建一次回话的SSE接口
     */
    CreateChatCompletion(req: CreateChatCompletionRequest, cb?: (error: string, rep: CreateChatCompletionResponse) => void): Promise<CreateChatCompletionResponse>;
    /**
     * 本接口（ModifyChatTitle）用于修改会话标题，通常在用户修改会话标题时使用。
     */
    ModifyChatTitle(req: ModifyChatTitleRequest, cb?: (error: string, rep: ModifyChatTitleResponse) => void): Promise<ModifyChatTitleResponse>;
    /**
     * 查询智能体值守任务详情
     */
    DescribeAgentDutyTaskDetail(req: DescribeAgentDutyTaskDetailRequest, cb?: (error: string, rep: DescribeAgentDutyTaskDetailResponse) => void): Promise<DescribeAgentDutyTaskDetailResponse>;
    /**
     * 智能体报告地址生成并下载
     */
    DescribeReportUrl(req?: DescribeReportUrlRequest, cb?: (error: string, rep: DescribeReportUrlResponse) => void): Promise<DescribeReportUrlResponse>;
    /**
     * 本接口（TerminateAgentInstance）用于下线智能体实例，通常在用户需要下线智能体实例时使用。
     */
    TerminateAgentInstance(req: TerminateAgentInstanceRequest, cb?: (error: string, rep: TerminateAgentInstanceResponse) => void): Promise<TerminateAgentInstanceResponse>;
    /**
     * 本接口（RecoverAgentInstance）用于解隔离智能体实例，通常在用户需要解隔离智能体实例时使用。
     */
    RecoverAgentInstance(req: RecoverAgentInstanceRequest, cb?: (error: string, rep: RecoverAgentInstanceResponse) => void): Promise<RecoverAgentInstanceResponse>;
    /**
     * 本接口（ModifyAgentInstanceParameters）用于修改智能体实例的参数列表，通常在用户需要配置智能体实例时使用。
     */
    ModifyAgentInstanceParameters(req: ModifyAgentInstanceParametersRequest, cb?: (error: string, rep: ModifyAgentInstanceParametersResponse) => void): Promise<ModifyAgentInstanceParametersResponse>;
    /**
     * 本接口（DescribeAgentInstances）用于查询智能体实例列表，通常在用户查询所购买的所有智能体列表。
     */
    DescribeAgentInstances(req: DescribeAgentInstancesRequest, cb?: (error: string, rep: DescribeAgentInstancesResponse) => void): Promise<DescribeAgentInstancesResponse>;
    /**
     * 本接口（DescribeAgents）用于查询智能体列表，通常在用户查询所购买的所有智能体列表。
     */
    DescribeAgents(req: DescribeAgentsRequest, cb?: (error: string, rep: DescribeAgentsResponse) => void): Promise<DescribeAgentsResponse>;
    /**
     * 本接口（CreateAgentInstance）用于创建一个智能体实例，通常在用户购买一个智能体实例时使用。
     */
    CreateAgentInstance(req: CreateAgentInstanceRequest, cb?: (error: string, rep: CreateAgentInstanceResponse) => void): Promise<CreateAgentInstanceResponse>;
}

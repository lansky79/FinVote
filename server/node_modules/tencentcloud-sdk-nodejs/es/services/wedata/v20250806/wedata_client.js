import { AbstractClient } from "../../../common/abstract_client";
export class Client extends AbstractClient {
    constructor(clientConfig) {
        super("wedata.tencentcloudapi.com", "2025-08-06", clientConfig);
    }
    async CreateTask(req, cb) {
        return this.request("CreateTask", req, cb);
    }
    async ListOpsWorkflows(req, cb) {
        return this.request("ListOpsWorkflows", req, cb);
    }
    async ListAlarmMessages(req, cb) {
        return this.request("ListAlarmMessages", req, cb);
    }
    async PauseOpsTasksAsync(req, cb) {
        return this.request("PauseOpsTasksAsync", req, cb);
    }
    async GetDataSourceRelatedTasks(req, cb) {
        return this.request("GetDataSourceRelatedTasks", req, cb);
    }
    async KillTaskInstancesAsync(req, cb) {
        return this.request("KillTaskInstancesAsync", req, cb);
    }
    async ListProjects(req, cb) {
        return this.request("ListProjects", req, cb);
    }
    async ListDownstreamTaskInstances(req, cb) {
        return this.request("ListDownstreamTaskInstances", req, cb);
    }
    async ListDownstreamOpsTasks(req, cb) {
        return this.request("ListDownstreamOpsTasks", req, cb);
    }
    async ListResourceFiles(req, cb) {
        return this.request("ListResourceFiles", req, cb);
    }
    async ListUpstreamOpsTasks(req, cb) {
        return this.request("ListUpstreamOpsTasks", req, cb);
    }
    async ListOpsTasks(req, cb) {
        return this.request("ListOpsTasks", req, cb);
    }
    async ListCatalog(req, cb) {
        return this.request("ListCatalog", req, cb);
    }
    async GetDataBackfillPlan(req, cb) {
        return this.request("GetDataBackfillPlan", req, cb);
    }
    async DeleteWorkflow(req, cb) {
        return this.request("DeleteWorkflow", req, cb);
    }
    async DeleteDataSource(req, cb) {
        return this.request("DeleteDataSource", req, cb);
    }
    async DissociateResourceGroupFromProject(req, cb) {
        return this.request("DissociateResourceGroupFromProject", req, cb);
    }
    async GetResourceFile(req, cb) {
        return this.request("GetResourceFile", req, cb);
    }
    async UpdateResourceFolder(req, cb) {
        return this.request("UpdateResourceFolder", req, cb);
    }
    async CreateDataSource(req, cb) {
        return this.request("CreateDataSource", req, cb);
    }
    async DeleteResourceFolder(req, cb) {
        return this.request("DeleteResourceFolder", req, cb);
    }
    async ListTasks(req, cb) {
        return this.request("ListTasks", req, cb);
    }
    async AssociateResourceGroupToProject(req, cb) {
        return this.request("AssociateResourceGroupToProject", req, cb);
    }
    async RemoveMemberProjectRole(req, cb) {
        return this.request("RemoveMemberProjectRole", req, cb);
    }
    async UpdateProject(req, cb) {
        return this.request("UpdateProject", req, cb);
    }
    async EnableProject(req, cb) {
        return this.request("EnableProject", req, cb);
    }
    async ListTenantRoles(req, cb) {
        return this.request("ListTenantRoles", req, cb);
    }
    async ListUpstreamTasks(req, cb) {
        return this.request("ListUpstreamTasks", req, cb);
    }
    async ListDataBackfillInstances(req, cb) {
        return this.request("ListDataBackfillInstances", req, cb);
    }
    async CreateDataBackfillPlan(req, cb) {
        return this.request("CreateDataBackfillPlan", req, cb);
    }
    async RunSQLScript(req, cb) {
        return this.request("RunSQLScript", req, cb);
    }
    async ListWorkflows(req, cb) {
        return this.request("ListWorkflows", req, cb);
    }
    async GetProject(req, cb) {
        return this.request("GetProject", req, cb);
    }
    async GetOpsAsyncJob(req, cb) {
        return this.request("GetOpsAsyncJob", req, cb);
    }
    async UpdateOpsTasksOwner(req, cb) {
        return this.request("UpdateOpsTasksOwner", req, cb);
    }
    async GetTableColumns(req, cb) {
        return this.request("GetTableColumns", req, cb);
    }
    async ListColumnLineage(req, cb) {
        return this.request("ListColumnLineage", req, cb);
    }
    async DeleteCodeFile(req, cb) {
        return this.request("DeleteCodeFile", req, cb);
    }
    async DisableProject(req, cb) {
        return this.request("DisableProject", req, cb);
    }
    async AddCalcEnginesToProject(req, cb) {
        return this.request("AddCalcEnginesToProject", req, cb);
    }
    async RegisterLineage(req, cb) {
        return this.request("RegisterLineage", req, cb);
    }
    async ListProjectMembers(req, cb) {
        return this.request("ListProjectMembers", req, cb);
    }
    async GetOpsAlarmRule(req, cb) {
        return this.request("GetOpsAlarmRule", req, cb);
    }
    async DeleteResourceGroup(req, cb) {
        return this.request("DeleteResourceGroup", req, cb);
    }
    async ListUpstreamTaskInstances(req, cb) {
        return this.request("ListUpstreamTaskInstances", req, cb);
    }
    async GetTask(req, cb) {
        return this.request("GetTask", req, cb);
    }
    async GetTaskInstanceLog(req, cb) {
        return this.request("GetTaskInstanceLog", req, cb);
    }
    async ListDataSources(req, cb) {
        return this.request("ListDataSources", req, cb);
    }
    async GetTaskCode(req, cb) {
        return this.request("GetTaskCode", req, cb);
    }
    async ListProcessLineage(req, cb) {
        return this.request("ListProcessLineage", req, cb);
    }
    async CreateProject(req, cb) {
        return this.request("CreateProject", req, cb);
    }
    async CreateWorkflowFolder(req, cb) {
        return this.request("CreateWorkflowFolder", req, cb);
    }
    async StopSQLScriptRun(req, cb) {
        return this.request("StopSQLScriptRun", req, cb);
    }
    async UpdateSQLFolder(req, cb) {
        return this.request("UpdateSQLFolder", req, cb);
    }
    async UpdateSQLScript(req, cb) {
        return this.request("UpdateSQLScript", req, cb);
    }
    async DeleteLineage(req, cb) {
        return this.request("DeleteLineage", req, cb);
    }
    async CreateResourceFolder(req, cb) {
        return this.request("CreateResourceFolder", req, cb);
    }
    async UpdateWorkflow(req, cb) {
        return this.request("UpdateWorkflow", req, cb);
    }
    async CreateSQLFolder(req, cb) {
        return this.request("CreateSQLFolder", req, cb);
    }
    async UpdateCodeFolder(req, cb) {
        return this.request("UpdateCodeFolder", req, cb);
    }
    async ListSQLFolderContents(req, cb) {
        return this.request("ListSQLFolderContents", req, cb);
    }
    async CreateCodeFolder(req, cb) {
        return this.request("CreateCodeFolder", req, cb);
    }
    async CreateSQLScript(req, cb) {
        return this.request("CreateSQLScript", req, cb);
    }
    async UpdateCodeFile(req, cb) {
        return this.request("UpdateCodeFile", req, cb);
    }
    async ListResourceFolders(req, cb) {
        return this.request("ListResourceFolders", req, cb);
    }
    async GetResourceGroupMetrics(req, cb) {
        return this.request("GetResourceGroupMetrics", req, cb);
    }
    async ListTaskVersions(req, cb) {
        return this.request("ListTaskVersions", req, cb);
    }
    async StopOpsTasksAsync(req, cb) {
        return this.request("StopOpsTasksAsync", req, cb);
    }
    async DeleteTask(req, cb) {
        return this.request("DeleteTask", req, cb);
    }
    async ListCodeFolderContents(req, cb) {
        return this.request("ListCodeFolderContents", req, cb);
    }
    async CreateResourceFile(req, cb) {
        return this.request("CreateResourceFile", req, cb);
    }
    async UpdateDataSource(req, cb) {
        return this.request("UpdateDataSource", req, cb);
    }
    async UpdateResourceGroup(req, cb) {
        return this.request("UpdateResourceGroup", req, cb);
    }
    async ListOpsAlarmRules(req, cb) {
        return this.request("ListOpsAlarmRules", req, cb);
    }
    async ListResourceGroups(req, cb) {
        return this.request("ListResourceGroups", req, cb);
    }
    async UpdateOpsAlarmRule(req, cb) {
        return this.request("UpdateOpsAlarmRule", req, cb);
    }
    async GrantMemberProjectRole(req, cb) {
        return this.request("GrantMemberProjectRole", req, cb);
    }
    async GetSQLFolder(req, cb) {
        return this.request("GetSQLFolder", req, cb);
    }
    async CreateProjectMember(req, cb) {
        return this.request("CreateProjectMember", req, cb);
    }
    async DeleteResourceFile(req, cb) {
        return this.request("DeleteResourceFile", req, cb);
    }
    async CreateCodeFile(req, cb) {
        return this.request("CreateCodeFile", req, cb);
    }
    async UpdateWorkflowFolder(req, cb) {
        return this.request("UpdateWorkflowFolder", req, cb);
    }
    async UpdateTask(req, cb) {
        return this.request("UpdateTask", req, cb);
    }
    async UpdateResourceFile(req, cb) {
        return this.request("UpdateResourceFile", req, cb);
    }
    async DeleteProjectMember(req, cb) {
        return this.request("DeleteProjectMember", req, cb);
    }
    async ListProjectRoles(req, cb) {
        return this.request("ListProjectRoles", req, cb);
    }
    async CreateWorkflow(req, cb) {
        return this.request("CreateWorkflow", req, cb);
    }
    async DeleteSQLFolder(req, cb) {
        return this.request("DeleteSQLFolder", req, cb);
    }
    async ListTaskInstanceExecutions(req, cb) {
        return this.request("ListTaskInstanceExecutions", req, cb);
    }
    async ListDatabase(req, cb) {
        return this.request("ListDatabase", req, cb);
    }
    async GetTaskInstance(req, cb) {
        return this.request("GetTaskInstance", req, cb);
    }
    async ListSQLScriptRuns(req, cb) {
        return this.request("ListSQLScriptRuns", req, cb);
    }
    async GetWorkflow(req, cb) {
        return this.request("GetWorkflow", req, cb);
    }
    async ListSchema(req, cb) {
        return this.request("ListSchema", req, cb);
    }
    async GetTaskVersion(req, cb) {
        return this.request("GetTaskVersion", req, cb);
    }
    async GetCodeFolder(req, cb) {
        return this.request("GetCodeFolder", req, cb);
    }
    async StartOpsTasks(req, cb) {
        return this.request("StartOpsTasks", req, cb);
    }
    async DeleteOpsAlarmRule(req, cb) {
        return this.request("DeleteOpsAlarmRule", req, cb);
    }
    async GetAlarmMessage(req, cb) {
        return this.request("GetAlarmMessage", req, cb);
    }
    async RerunTaskInstancesAsync(req, cb) {
        return this.request("RerunTaskInstancesAsync", req, cb);
    }
    async ListTaskInstances(req, cb) {
        return this.request("ListTaskInstances", req, cb);
    }
    async GetSQLScript(req, cb) {
        return this.request("GetSQLScript", req, cb);
    }
    async ListLineage(req, cb) {
        return this.request("ListLineage", req, cb);
    }
    async GetOpsTask(req, cb) {
        return this.request("GetOpsTask", req, cb);
    }
    async SetSuccessTaskInstancesAsync(req, cb) {
        return this.request("SetSuccessTaskInstancesAsync", req, cb);
    }
    async GetOpsWorkflow(req, cb) {
        return this.request("GetOpsWorkflow", req, cb);
    }
    async GetOpsTaskCode(req, cb) {
        return this.request("GetOpsTaskCode", req, cb);
    }
    async CreateOpsAlarmRule(req, cb) {
        return this.request("CreateOpsAlarmRule", req, cb);
    }
    async ListWorkflowFolders(req, cb) {
        return this.request("ListWorkflowFolders", req, cb);
    }
    async SubmitTask(req, cb) {
        return this.request("SubmitTask", req, cb);
    }
    async DeleteCodeFolder(req, cb) {
        return this.request("DeleteCodeFolder", req, cb);
    }
    async CreateResourceGroup(req, cb) {
        return this.request("CreateResourceGroup", req, cb);
    }
    async DeleteWorkflowFolder(req, cb) {
        return this.request("DeleteWorkflowFolder", req, cb);
    }
    async ListTable(req, cb) {
        return this.request("ListTable", req, cb);
    }
    async GetCodeFile(req, cb) {
        return this.request("GetCodeFile", req, cb);
    }
    async DeleteSQLScript(req, cb) {
        return this.request("DeleteSQLScript", req, cb);
    }
    async GetDataSource(req, cb) {
        return this.request("GetDataSource", req, cb);
    }
    async GetTable(req, cb) {
        return this.request("GetTable", req, cb);
    }
    async ListDownstreamTasks(req, cb) {
        return this.request("ListDownstreamTasks", req, cb);
    }
}
